FROM twobombs/thereminq-tensors

# prerequisites for functionality offered in this container
RUN pip3 install jupytext ipython tensorboard cirq tensorflow jupyter pyvista pyqt5 bc cvxpy traitlets nbconvert matplotlib jupyter_http_over_ws jupyterlab notebook jupyter-book vedo numba-cuda && pip cache purge
RUN pip3 install cuda-python==12.8.0 dimod && pip cache purge && apt install pybind11-dev && apt clean all

# tensorflow-quantum
# RUN git clone --depth=1 https://github.com/tensorflow/quantum.git && cd quantum && pip install -r requirements.txt && pip cache purge

# install dask
RUN apt update && apt install -y python3-pip mathomatic-primes mathomatic && apt clean all 
RUN pip3 install dask-cuda cupy-cuda12x joblib matplotlib && pip3 cache purge

# install pennylane, openfermion and other dependancies for pyqrack vqe benchmark scripts
RUN apt install -y libopenblas-dev && apt clean all
RUN pip install --prefer-binary --upgrade pyscf && pip cache purge
RUN pip install --prefer-binary --upgrade --force pennylane pennylane-qrack pennylane-lightning[gpu] openfermion cirq matplotlib ply autograd plotly && pip cache purge
# openfermionpyscf pennylane-qchem pennylane-cirq

# convert md / py / ipynb files
RUN cd notebooks/qrack/pyqrack-jupyter && jupyter nbconvert --to script *.ipynb
RUN cd /notebooks/google/Cirq/docs/simulate && jupyter nbconvert --to script *.ipynb

# convert some of the py files to ipynb for convenience
RUN cd /notebooks/qrack/pyqrack-examples && jupytext --to notebook *.py
RUN cd /notebooks/qrack/pyqrack-examples/rcs && jupytext --to notebook *.py
RUN cd /notebooks/qrack/pyqrack-examples/qbdd && jupytext --to notebook *.py
RUN cd /notebooks/qrack/pyqrack-examples/ising && jupytext --to notebook *.py

RUN cd /notebooks/qrack/simulator-benchmarks && jupytext --to notebook *.py
RUN cd /notebooks/qrack/qiskit-qrack-provider/test/benchmark && jupytext --to notebook *.py
RUN cd /notebooks/qrack/qiskit-qrack-provider/qiskit/providers/qrack && jupytext --to notebook *.py
RUN cd /notebooks/thereminq/thereminq-tensors/runfiles && jupytext --to notebook *.py

# legacy: place tensorboard projector project 
RUN cd notebooks/misc && mkdir tensorboard-projector && cd tensorboard-projector && wget https://storage.googleapis.com/tensorflow_docs/tensorboard/docs/tensorboard_projector_plugin.ipynb

EXPOSE 6080 8080 443 2022 7880
ENTRYPOINT /root/run-boards
