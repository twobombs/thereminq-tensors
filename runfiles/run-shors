# X-run script
rm /tmp/.X0-lock
Xvfb :0 -screen 0 1920x1080x24+32 -ac &
export DISPLAY=:0&&startxfce4 &
sleep 10
x0vncserver -display :0 -passwordfile ~/.vnc/passwd &
/usr/share/novnc/utils/launch.sh --vnc localhost:5900 &
export DISPLAY=:0&&xterm -e "xset s off"&&

# placeholder for tensorflow/board/projector start 
./root/.local/bin/tensorboard --logdir --db sqlite:~/.tensorboard.db --host=127.0.0.1 &
qps-client -p 8443 &
#
# start rsaConverter, firefox session with jupyter notebook
jupyter notebook --notebook-dir=/pyqrack-jupyter --ip 127.0.0.1 --no-browser --allow-root --NotebookApp.token='' --NotebookApp.password='' &
jupyter notebook --notebook-dir=/qiskit-iqx-tutorials --ip 127.0.0.1 --no-browser --allow-root --NotebookApp.token='' --NotebookApp.password='' &
jupyter notebook --notebook-dir=/tensorboard-projector --ip 127.0.0.1 --no-browser --allow-root --NotebookApp.token='' --NotebookApp.password='' &
#
# RSA key magick AYB64 - rsa keygen pub & private, convert to pem and extract Integers, Primes + vars in text and make it bot-readable
< /dev/zero ssh-keygen -q -b 1024 -t rsa -m PEM -N ""
cd /root/.ssh && openssl asn1parse -in id_rsa > id_rsa.vars
ssh-keygen -f id_rsa.pub -e -m pem > id_rsa_pub.pem && openssl asn1parse -in id_rsa_pub.pem > id_rsa_pub_pem.vars
openssl rsa -in id_rsa -noout -text > id_rsa_text.vars
sed 's/://g' id_rsa_text.vars | tr -d '\:\n' | sed "s/    //g" > id_rsa_text.parsable
cat id_rsa_text.parsable | sed -e 's/.*modulus\(.*\)publicExponent.*/\1/' | tr "a-z" "A-Z" > modulus.hex
modulus=$(< modulus.hex)  &&  echo "ibase=16; "$modulus |BC_LINE_LENGTH=0 bc > modulus.dec
#
# start apps
export DISPLAY=:0 && ./thereminq-tensors/runfiles/rsaConverter &
sleep 10 && export DISPLAY=:0 && firefox http://127.0.0.1:8888 http://127.0.0.1:8889 http://127.0.0.1:8890 &
# export DISPLAY=:0 && ./pyqrack-jupyter/shors_winloop > /var/log/thereminq/shors-128qb_"$(date +%F_%R_%S).log"
#
echo "done"
# end run, do not stop container
tail -f /dev/null
